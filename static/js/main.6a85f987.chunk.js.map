{"version":3,"sources":["components/pages/cart-page.js","components/book-list-item/book-list-item.js","actions/index.js","components/bookstore-service-context/bookstore-service-contex.js","components/hoc/with-bookstore-service.js","utils/compose.js","components/spinner/spinner.js","components/error-indicator/error-indicator.js","components/error-indicator/index.js","components/book-list/book-list.js","components/pages/home-page.js","components/shop-header/shop-header.js","components/shopping-cart-table/shopping-cart-table.js","components/app/app.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["CardPage","BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","onClick","bookAddedToCart","bookId","type","payload","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","err","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","map","id","BookListContainer","this","loading","error","Component","connect","bookList","ownProps","HomePage","ShopHeader","numItems","total","to","mapDispatchToProps","onIncrease","onDecrease","onDelete","shoppingCart","items","cartItems","orderTotal","item","idx","count","App","role","path","exact","component","CartPage","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","next","getState","console","log","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.6a85f987.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CardPage = () => {\r\n    return <div>Card Page</div>;\r\n}\r\n\r\nexport default CardPage;","import React from 'react';\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, coverImage } = book;\r\n    return (\r\n        <div className='book-list-item'>\r\n            <div className='book-cover'>\r\n                <img src={coverImage} alt='cover' />\r\n            </div>\r\n            <div className='book-details'>\r\n                <span>{title}</span>\r\n                <span>{author}</span>\r\n                <span>{price}</span>\r\n                <button className='btn btn-info add-to-cart'\r\n                    onClick={onAddedToCart}\r\n                >Add to cart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListItem;","\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUESTED'\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const allBookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst fetchBooks = (bookstoreService, dispatch) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err)=> dispatch(booksError(err)))\r\n}\r\n\r\nexport {\r\n    fetchBooks\r\n}","import React from 'react';\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  BookstoreServiceProvider,\r\n  BookstoreServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context/bookstore-service-contex';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n  return (props) => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {\r\n          (bookstoreService) => {\r\n            return (<Wrapped {...props}\r\n                     bookstoreService={bookstoreService}/>);\r\n          }\r\n        }\r\n      </BookstoreServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withBookstoreService;\r\n","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n}\r\n\r\nexport default compose;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return <div>loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Error!</div>\r\n}\r\n\r\nexport default ErrorIndicator;","import ErrorIndicator from './error-indicator';\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport './book-list.css';\r\nimport BookListItem from '../book-list-item/book-list-item';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nconst BookList = ({books, onAddedToCart}) => {\r\n    return (\r\n        <ul className='book-list'>\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem book={book}  onAddedToCart={()=>onAddedToCart(book.id)}/>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n        if (error ) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return <BookList books={books} onAddedToCart={onAddedToCart}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\r\n    return { books, loading, error };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const { bookstoreService } = ownProps;\r\n    return {\r\n        fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n        onAddedToCart: (id)=> dispatch(bookAddedToCart(id))\r\n    }\r\n}\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);","import React from 'react';\r\nimport BookList from '../book-list/book-list';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <BookList />\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './shop-header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n  return (\r\n    <header className=\"shop-header row\">\r\n      <Link to='/'>\r\n        <div className=\"logo text-dark\">ReStore</div>\r\n      </Link>\r\n      <Link to='/cart'>\r\n        <div className=\"shopping-cart\">\r\n          <i className=\"cart-icon fa fa-shopping-cart\" />\r\n          {numItems} items (${total})\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ShopHeader;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './shopping-cart-table.css';\r\nimport { bookAddedToCart, bookRemovedFromCart, allBookRemovedFromCart } from '../../actions';\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item;\r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx + 1}</td>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>${total}</td>\r\n        <td>\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onIncrease(id)}\r\n            className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onDecrease(id)}\r\n            className=\"btn btn-outline-warning btn-sm float-right\">\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Your Order</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        { items.map(renderRow) }\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">\r\n        Total: ${total}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n  return {\r\n    items: cartItems,\r\n    total: orderTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onIncrease: bookAddedToCart,\r\n  onDecrease: bookRemovedFromCart,\r\n  onDelete: allBookRemovedFromCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport CartPage from '../pages/cart-page';\r\nimport HomePage from '../pages/home-page';\r\nimport ShopHeader from '../shop-header/shop-header';\r\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role='main' className='container'>\r\n            <ShopHeader numItems={5} total={210}/>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={HomePage} />\r\n                <Route path=\"/cart\" component={CartPage} />\r\n            </Switch>\r\n            <ShoppingCartTable />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator/error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","\r\nexport default class BookstoreService {\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Production-Ready Microservices',\r\n            author: 'Susan J. Fowler',\r\n            price: 32,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n          {\r\n            id: 2,\r\n            title: 'Release It!',\r\n            author: 'Michael T. Nygard',\r\n            price: 45,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\r\n    ];\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(()=>{\r\n                resolve(this.data)\r\n            }, 700);\r\n        })\r\n    }\r\n}","const updateBookList = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n        }\r\n    }\r\n    switch (action.type){\r\n        case 'FETCH_BOOKS_REQUESTED':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state.bookList;\r\n    }\r\n}\r\n\r\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if(item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1),\r\n        ]\r\n    }\r\n\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    };\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1),\r\n    ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n    const {  id = book.id, count = 0,  title = book.title, total = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + quantity,\r\n        total: total + quantity*book.price\r\n    }\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: {books}, shoppingCart: {cartItems} } = state;\r\n    const book = books.find((({id})=> id === bookId))\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(book, item, quantity)\r\n    return {\r\n        orderTotal: 0,\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n    }\r\n}\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        }\r\n    }\r\n    switch (action.type){\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        \r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n\r\n        case 'ALL_BOOK_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart;","import updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart';\r\n\r\nconst reducer = (state, action) =>{\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer; ","import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst logMiddleware = ({getState}) => (next) => (action) => {\r\n    console.log(action.type, getState())\r\n    return next(action);\r\n}\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if(typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        })\r\n    }\r\n    return next(action);\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware(stringMiddleware, logMiddleware));\r\n\r\nstore.dispatch('HELLO')\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app/app';\r\nimport ErrorBoundry from './components/error-boundry/error-boundry';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context/bookstore-service-contex';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundry>\r\n            <BookstoreServiceProvider value={bookstoreService}>\r\n                <Router>\r\n                    <App/>\r\n                </Router>\r\n            </BookstoreServiceProvider>\r\n        </ErrorBoundry>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}